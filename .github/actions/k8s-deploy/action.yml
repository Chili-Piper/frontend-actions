name: "Deploy to k8s"
description: "Deploy to k8s"
inputs:
  credentials_json:
    description: "Credentials JSON for GCloud"
    required: true
  project_name:
    description: "Project name"
    required: false
  target_env:
    description: "Target environment"
    required: false
runs:
  using: "composite"
  steps:
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ inputs.credentials_json }}
    - name: Authenticate to Docker Registry
      shell: bash
      run: gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin us-central1-docker.pkg.dev
    - name: Setup env
      run: |
        export VERSION=$( node -p -e "require('./package.json').version" )
        export IMAGE="us-central1-docker.pkg.dev/chilipiper-cloud/apps/$PROJECT_NAME:${VERSION}"
        
        echo VERSION=$VERSION >> $GITHUB_ENV
        echo IMAGE=$IMAGE >> $GITHUB_ENV
      env:
        PROJECT_NAME: ${{ inputs.project_name }}
      shell: bash
    - name: Build & push docker image
      run: |
        docker build -f "./Dockerfile" -t "$IMAGE" .
        docker push $IMAGE
      shell: bash
    - name: Deploy to docker registry with env tag
      if: ${{ inputs.target_env == 'staging' }}
      run: |
        export IMAGEWithEnv="us-central1-docker.pkg.dev/chilipiper-cloud/apps/$PROJECT_NAME:${VERSION}-$TARGET_ENV"
        docker tag "$IMAGE" "$IMAGEWithEnv"
        docker push $IMAGEWithEnv
        
        echo "Deployed to $TARGET_ENV"
      env:
        TARGET_ENV: ${{ inputs.target_env }}
        PROJECT_NAME: ${{ inputs.project_name }}
      shell: bash
