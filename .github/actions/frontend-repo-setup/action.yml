name: "Set up"
description: "Set up environment"
inputs:
  ref:
    description: "Ref for checkout"
    required: false
  fetch-depth:
    description: "Fetch depth for checkout"
    required: false
  node_version:
    description: "Node version"
    required: false
    default: "22.13.0"
  npm_token:
    description: "NPM token"
    required: false
  checkout_repo:
    description: "Repository to checkout"
    required: false
  checkout_path:
    description: "Relative path under $GITHUB_WORKSPACE to place the repository"
    required: false
    default: "."
  checkout_token:
    description: "Github Token for when checking out a different repository"
    required: false
outputs:
  LATEST_TAG:
    description: "Latest tag"
    value: ${{ steps.latest_tag.outputs.LATEST_TAG }}
runs:
  using: "composite"
  steps:
    - name: Setup Node.js environment
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node_version }}

    - name: Install yarn
      run: corepack enable
      shell: bash

    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.ref }}
        token: ${{ inputs.checkout_token || env.GITHUB_TOKEN }}
        fetch-depth: ${{ inputs.fetch-depth }}
        repository: ${{ inputs.checkout_repo }}
        path: ${{ inputs.checkout_path }}

    - name: Cache node_modules
      uses: actions/cache@v4
      id: node-modules-cache
      env:
        cache-name: node-modules-yarn
        cache-fingerprint: ${{ env.node-version }}-${{ hashFiles('**/yarn.lock') }}
      with:
        path: |
          ${{ inputs.checkout_path }}/**/node_modules
          !**/node_modules/.cache/turbo
          ${{ inputs.checkout_path }}/.yarn/cache
          /home/runner/.cache/Cypress
        key: v4-${{ runner.os }}-${{ env.cache-name }}-${{ inputs.checkout_path }}-${{ env.cache-fingerprint }}
        restore-keys: v4-${{ runner.os }}-${{ env.cache-name }}-${{ inputs.checkout_path }}-

    - name: NPM auth
      if: ${{ inputs.npm_token }}
      run: npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
      env:
        NPM_TOKEN: ${{ inputs.npm_token }}
      shell: bash

    - name: Yarn berry NPM auth
      if: ${{ inputs.npm_token }}
      run: yarn config set 'npmRegistries["//registry.npmjs.org"].npmAuthToken' "${NPM_TOKEN}"
      env:
        NPM_TOKEN: ${{ inputs.npm_token }}
      shell: bash

    - name: Install dependencies
      id: install-dependencies
      if: steps.node-modules-cache.outputs.cache-hit != 'true'
      working-directory: ${{ inputs.checkout_path }}
      run: yarn --immutable
      shell: bash

    - name: set LATEST_TAG
      if: inputs.fetch-depth == '0'
      id: latest_tag
      run: |
        COMMIT_WITH_TAG=$(git describe --tag --abbrev=0)
        echo "COMMIT_WITH_TAG=$COMMIT_WITH_TAG"
        LATEST_TAG=$(git tag -l --contains $COMMIT_WITH_TAG | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$'  | tail -n 1)
        echo "LATEST_TAG=$LATEST_TAG"
        echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_OUTPUT
        echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
      shell: bash

    - name: Get ticket
      run: |
        #Split the branch name by '-' and get the issue key
        ISSUE_KEY_PREFIX="$(cut -f1 -d"-" <<<"$BRANCH")"
        ISSUE_KEY_NUMBER="$(cut -f2 -d"-" <<<"$BRANCH")"
        ISSUE_KEY="${ISSUE_KEY_PREFIX}-${ISSUE_KEY_NUMBER}"
        JIRA_TICKET="$(tr [A-Z] [a-z] <<< "$ISSUE_KEY")"
        if [ "$JIRA_TICKET" != "-" ];
        then
          echo "JIRA_TICKET=$JIRA_TICKET"
          echo JIRA_TICKET=$JIRA_TICKET >> $GITHUB_ENV
          echo "JIRA_TICKET=$(echo $JIRA_TICKET)" >> $GITHUB_OUTPUT
          echo "ticket=$(echo $JIRA_TICKET)" >> $GITHUB_OUTPUT
        else
          echo "Not possible to derive ticket"
        fi
      env:
        BRANCH: ${{ github.head_ref }}
      shell: bash
