name: "Contract Testing"
description: "Checks for FE <-> BE Integration"
inputs:
  frontend:
    description: "Frontend apps versions"
    required: false
  backend:
    description: "Backend services versions"
    required: false
  appsStatuses:
    description: "Object describing which apps have possible contract changes"
    required: false
  gcloud_credentials_json:
    description: "GCLOUD credentials"
    required: true
  checkout_token:
    description: "Github Token"
    required: true
  npm_token:
    description: "NPM Token"
    required: true
  turbo_team:
    description: "TurboRepo Team. Used to cache/speed up frontend monorepo checks"
    required: false
  turbo_token:
    description: "TurboRepo Token. Used to cache/speed up frontend monorepo checks"
    required: false
  shard:
    description: "Defines a fraction of checks to run. For example, setting it to 1/3 will execute one-third of the total checks, allowing for distributed or partial test execution"
    required: true
    default: 1/1
  should_fail:
    description: "Fail when integration error is found"
    required: false
    default: true
outputs:
  failed_frontends:
    description: "If it fails, outputs list of failed frontends"
    value: ${{ steps.run-checks.outputs.failed_frontends }}
runs:
  using: "composite"
  steps:
    - name: Setup
      uses: Chili-Piper/frontend-actions/.github/actions/frontend-repo-setup@main
      with:
        checkout_path: /home/runner/_work/frontend/frontend
        checkout_repo: Chili-Piper/frontend
        checkout_token: ${{ inputs.checkout_token }}
        npm_token: ${{ inputs.npm_token }}
        restore_cache_from_repo: frontend
        node_version_file: /home/runner/_work/frontend/frontend/.nvmrc
        gcloud_credentials_json: ${{ inputs.gcloud_credentials_json }}
    - name: Decide single vs multi backend
      id: decide
      shell: bash
      env:
        BACKEND: ${{ inputs.backend }}
      run: |
        printf '%s\n' "$BACKEND" > backend.yml
        line_count=$(grep -cve '^[[:space:]]*$' backend.yml)

        if [ "$line_count" -eq 1 ]; then
          line=$(head -n1 backend.yml)
          backend_name=$(echo "$line" | cut -d':' -f1 | xargs)
          echo "mode=single" >> "$GITHUB_OUTPUT"
          echo "backend_name=$backend_name" >> "$GITHUB_OUTPUT"
        else
          echo "mode=multi" >> "$GITHUB_OUTPUT"
        fi
    - name: Show decided mode
      shell: bash
      run: |
        echo "Decided mode: ${{ steps.decide.outputs.mode }}"
        if [ "${{ steps.decide.outputs.mode }}" = "single" ]; then
          echo "Backend Name: ${{ steps.decide.outputs.backend_name }}"
        fi
    - name: Set up Cloud SDK
      if: steps.decide.outputs.mode == 'multi'
      uses: google-github-actions/setup-gcloud@v2
    - name: Update api-client services.json
      if: steps.decide.outputs.mode == 'multi'
      uses: Chili-Piper/frontend-actions/.github/actions/contract-tests/set-be-services@main
      with:
        api_client_source_path: /home/runner/_work/frontend/frontend
        backend: ${{ inputs.backend }}
    - name: Load Open API Docs
      if: steps.decide.outputs.mode == 'multi'
      shell: bash
      working-directory: /home/runner/_work/frontend/frontend
      run: yarn workspace @chilipiper/api-client load-docs
    - name: Update api-client docs json
      uses: Chili-Piper/frontend-actions/.github/actions/contract-tests/set-be-openapi@main
      with:
        api_client_source_path: /home/runner/_work/frontend/frontend
        backend: ${{ inputs.backend }}
    - name: Build API code
      shell: bash
      working-directory: /home/runner/_work/frontend/frontend
      env:
        SERVICE: ${{ steps.decide.outputs.backend_name }}
      run: yarn workspace @chilipiper/api-client generate-code
    - name: Get api-client path
      id: get-api-client-path
      working-directory: /home/runner/_work/frontend/frontend
      run: |
        FULL_PATH=$(realpath .)
        echo "Full path: $FULL_PATH"

        echo "api_client_repo_path=$FULL_PATH" > $GITHUB_OUTPUT
      shell: bash
    - name: Run Checks
      id: run-checks
      uses: Chili-Piper/frontend-actions/.github/actions/contract-tests/run-checks@main
      with:
        frontend: ${{ inputs.frontend }}
        backend: ${{ inputs.backend }}
        appsStatuses: ${{ inputs.appsStatuses }}
        api_client_repo_path: ${{ steps.get-api-client-path.outputs.api_client_repo_path }}
        checkout_token: ${{ inputs.checkout_token }}
        turbo_team: ${{ inputs.turbo_team }}
        turbo_token: ${{ inputs.turbo_token }}
        shard: ${{ inputs.shard }}
        should_fail: ${{ inputs.should_fail }}
