name: "Set up"
description: "Set up environment"
inputs:
  ref:
    description: "Ref for checkout"
    required: false
  fetch-depth:
    description: "Fetch depth for checkout"
    required: false
  npm_token:
    description: "NPM token"
    required: false
  full_with_optional_install:
    description: "Run yarn with --production=false flag"
    required: false
    default: "false"
  full_with_optional_install_v3:
    description: "Run yarn with --mode=development flag"
    required: false
    default: "false"
  full_install:
    description: "Run yarn with --ignore-optional --production=false flags"
    required: false
    default: "false"
  cache_path:
    description: "Path variable sent to cache action"
    required: false
    default: node_modules
  custom_install:
    description: "Use custom params for install dependencies"
    required: false
  cache:
    description: "If need to cache dependencies"
    required: false
    default: "true"
  node_version:
    description: "Node version"
    required: false
    default: "20.12.1"
runs:
  using: "composite"
  steps:
    - name: Setup Node.js environment
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node_version }}

    - name: Install yarn
      run: corepack enable
      shell: bash

    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.ref }}
        fetch-depth: ${{ inputs.fetch-depth }}

    - name: Cache node_modules
      if: inputs.cache == 'true'
      uses: actions/cache@v4
      id: node-modules-cache
      env:
        cache-name: node-modules-yarn
        cache-fingerprint: ${{ env.node-version }}-${{ hashFiles('**/yarn.lock') }}
      with:
        path: ${{ inputs.cache_path }}
        key: v4-${{ runner.os }}-${{ env.cache-name }}-${{ env.cache-fingerprint }}
        restore-keys: v4-${{ runner.os }}-${{ env.cache-name }}-

    - name: NPM auth
      if: ${{ inputs.npm_token }}
      run: npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
      env:
        NPM_TOKEN: ${{ inputs.npm_token }}
      shell: bash

    - name: Yarn berry NPM auth
      if: ${{ inputs.npm_token }}
      run: yarn config set 'npmRegistries["//registry.npmjs.org"].npmAuthToken' "${NPM_TOKEN}"
      env:
        NPM_TOKEN: ${{ inputs.npm_token }}
      shell: bash

    - name: Install dependencies
      if: (inputs.cache == 'false' || steps.node-modules-cache.outputs.cache-hit != 'true') && inputs.full_install == 'false' && inputs.full_with_optional_install == 'false'
      run: yarn --immutable
      shell: bash

    - name: Install dependencies FULL WITH OPTIONAL INSTALL
      if: (inputs.cache == 'false' || steps.node-modules-cache.outputs.cache-hit != 'true') && inputs.full_with_optional_install == 'true'
      run: yarn --immutable --production=false
      shell: bash

    - name: Install dependencies FULL WITH OPTIONAL INSTALL - Yarn v3
      if: (inputs.cache == 'false' || steps.node-modules-cache.outputs.cache-hit != 'true') && inputs.full_with_optional_install_v3 == 'true'
      run: yarn --immutable --mode=development
      shell: bash

    - name: Install dependencies FULL
      if: (inputs.cache == 'false' || steps.node-modules-cache.outputs.cache-hit != 'true') && inputs.full_install == 'true'
      run: yarn --immutable --ignore-optional --production=false
      shell: bash
